#скрипт для запуска Teamtalk сервера. Создаёт необходимые служебные папки в домашней дериктории пользователя, а затем запускает мастер настройки автоматически. Далее: генерирует systemd сервис, затем автоматически запускает портал, добавляет сервис в автозапуск.
#Условие данной версии  скрипта следущее: Необходимо положить исполняемый файл tt5srv по пути usr/local/bin, для того, чтобы система выполнила команду teamtalk сервера.
#В настройках сервера в секции file derectory нужно указать filesмалыми буквами
#Скрипт спросит вас имя рабочей папки для teamtalk сервера
#Теперь скрипт создаёт .config/systemd/user, когда в корне пользователя таких папок не имеется.
#В скрипт интегрирован новый мастер настроек, он конфигурирует рекомендованые пораметры сервера, которые можно изменить через клиент. Также предоставляет возможность создать администратора. 
  #Функции
#очистка экрана.
clear
tt-set(){
#Эта функция открывает блок внутреннего мастера настроек.
read -p "Добро пожаловать в мастер настройки teamtalk сервера. Этот wizard не заменяет стандартный конфигуратор teamtalk. Нажмите Enter для продолжения."
read -p "Я помогу вам настроить Teamtalk, возможно, быстрее. Мы установим рекомендованые параметры звука и кодека, а также создадим учётную запись администратора."
read -p "Затем вы можете всё настроить под себя с помощью административных возможностей клиента. Готовы создать teamtalk сервер и начать общение? Тогда нажмите Enter для продолжения."
read -e -p "Введите название сервера" server
read -e -p "введите сообщение дня. Пункт необязательный, вы можете пропустить его, просто нажав Enter." motd
read -e -p "Введите tcp порт" tcp
read -e -p "Введите udp порт" udp
read -e -p "Приступаем к созданию пользователя: Для начала, введите имя." user
read -e -p "Введите пароль" pass
read -p "Готово! Данные были получены. Производится создание рабочих папок для сервера, а затем создание xml файла с настройками. Повторю, что в файле рекомендованые настройки основных параметров, которые вы можете изменить на своё усмотрение."
#Дескриптор, который вводит полученые параметры в файл xml.
exec 3> tt5srv.xml
echo "<?xml version="1.0" encoding="UTF-8" ?>
<teamtalk version="5.2">
    <general>
        <server-name>$server</server-name>
        <motd>$motd</motd>
        <max-users>1000</max-users>
        <auto-save>true</auto-save>
        <tcpport>$tcp</tcpport>
        <udpport>$udp</udpport>
        <login-attempts>0</login-attempts>
        <max-logins-per-ipaddr>0</max-logins-per-ipaddr>
        <login-delay-msec>0</login-delay-msec>
        <bandwidth-limits>
            <voicetx-limit>0</voicetx-limit>
            <vidcaptx-limit>0</vidcaptx-limit>
            <mediafiletx-limit>0</mediafiletx-limit>
            <desktoptx-limit>0</desktoptx-limit>
            <totaltx-limit>0</totaltx-limit>
        </bandwidth-limits>
        <user-timeout>60</user-timeout>
    </general>
    <file-storage>
        <files-root>files</files-root>
        <max-diskusage>10240000000</max-diskusage>
        <channel-diskquota>2048000000</channel-diskquota>
    </file-storage>
    <logging>
        <server-log-maxsize>-1</server-log-maxsize>
        <server-log-events>33554431</server-log-events>
    </logging>
    <users>
        <user>
            <username>$user</username>
            <password>$pass</password>
            <user-type>2</user-type>
            <user-rights>0</user-rights>
            <note />
            <userdata>0</userdata>
            <init-channel />
            <modified-time>$(date +%Y/%m/%d\ %H:%M)</modified-time>
            <audiocodec-bps-limit>0</audiocodec-bps-limit>
            <abuse-prevention>
                <commands-limit>0</commands-limit>
                <commands-interval-msec>0</commands-interval-msec>
            </abuse-prevention>
            <channel-operator />
        </user>
    </users>
    <serverbans />
    <permanent-channels>
        <channel>
            <!-- Channel path: / -->
            <channel-id>1</channel-id>
            <password></password>
            <topic></topic>
            <diskquota>2048000000</diskquota>
            <op-password></op-password>
            <max-users>1000</max-users>
            <channel-type>1</channel-type>
            <userdata>0</userdata>
            <audio-codec>
                <codec-type>3</codec-type>
                <samplerate>48000</samplerate>
                <channels>2</channels>
                <application>2048</application>
                <complexity>10</complexity>
                <fec>true</fec>
                <dtx>false</dtx>
                <bitrate>128000</bitrate>
                <vbr>true</vbr>
                <vbr-constraint>false</vbr-constraint>
                <framesize>960</framesize>
                <fpp>1</fpp>
            </audio-codec>
            <audio-config>
                <enable-agc>false</enable-agc>
                <gain-level>0</gain-level>
            </audio-config>
            <transmit-users>
                <voice-tx-all>false</voice-tx-all>
                <videocapture-tx-all>false</videocapture-tx-all>
                <mediafile-tx-all>false</mediafile-tx-all>
                <desktopshare-tx-all>false</desktopshare-tx-all>
            </transmit-users>
            <files />
            <channelbans />
        </channel>
    </permanent-channels>
</teamtalk>" >&3
echo "Приступаем к настройке systemd для сервера"
read -e -p "Пожалуйста, введите имя службы. Расширение .service подставится автоматически." systemd
#Здесь вызывается функция, которая генерирует сервис systemd.
systemd-gen
#Ниже, закрывается тело функции.
}

#Функция, которая генерирует служебный файл.
systemd-gen(){
#Переходим в домашнюю папку пользователя, для манипуляции с конфигурационными файлами.
cd
#Выполняем проверку наличие дерикторий для systemd.
if [ -d .config1/systemd/user ]; then
echo "генерируем служебный файл для запуска Teamtalk"
else
read -p "Было обнаружено, что у вас отсутствуют требуемые папки для systemd. Нажмите Enter, и дериктории будут созданы."
mkdir -p .config/systemd/user
fi
#выводим полученые данные в файл, и создаём стандартный systemd сервис.
exec 3> .config/systemd/user/$systemd.service
echo "[Unit]
Description=tt5
After=network.target

[Service]
ExecStart=/usr/local/bin/tt5srv -wd $FN -nd

[Install]
WantedBy=default.target" >&3
echo "Запускаем сервер и добавляем в автозагрузку"
systemctl --user daemon-reload
systemctl --user enable $systemd
systemctl --user start $systemd
echo "Благодарим за использование скрипта. Приятного общения!"
#Эта функция завершает скрипт.
exit
}

#основная фаза сценария.
read -p "Вы запустили скритп, для простого создания Teamtalk сервера. Для начала мы запросим некоторые данные, которые пригодятся для настройки сервера."
 read -e -p "Пожалуйста, введите имя рабочей папки для сервера Teamtalk. Обратите внимания. Писать абсолютный путь ненужно. Можно указать относительный. Так можно сохранить портативность systemd конфигурации." FN
mkdir $FN
mkdir $FN/files
cd $FN
echo "Выберете вариант настройки сервера:"
echo "1. Использовать стандартный конфигуратор Teamtalk."
echo "2. Использовать мастер, встроенный в tt5-set."
echo "Введите цифру и нажмите клавишу Enter"
read selector
#Вызываем ветку выбора функций скрипта.
case $selector in
1 )
read -p "Вы выбрали стандартный мастер настроек. Следуйте подсказкам системы, для первоначальной настройки вашего Teamtalk сервера. Нажмите Enter, чтобы продолжить."
tt5srv -wizard
;;
2 )
tt-set
#Вызывается функция tt-set, для использования внутреннего мастера настроек.
;;
#закрываем выбор вариантов.
esac
#Настраиваем systemd, вслучае, если выбран стандартный конфигуратор teamtalk.
echo "Приступаем к настройке службы systemd для сервера"
read -e -p "Пожалуйста, введите имя службы. Расширение .service подставится автоматически." systemd
#Затем вызываем генирацию сервиса.
systemd-gen
#Исполнение скрипта завершено.